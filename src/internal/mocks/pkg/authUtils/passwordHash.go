// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/authUtils/passwordHash.go

// Package mock_auth_utils is a generated GoMock package.
package mock_auth_utils

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIPasswordHasher is a mock of IPasswordHasher interface.
type MockIPasswordHasher struct {
	ctrl     *gomock.Controller
	recorder *MockIPasswordHasherMockRecorder
}

// MockIPasswordHasherMockRecorder is the mock recorder for MockIPasswordHasher.
type MockIPasswordHasherMockRecorder struct {
	mock *MockIPasswordHasher
}

// NewMockIPasswordHasher creates a new mock instance.
func NewMockIPasswordHasher(ctrl *gomock.Controller) *MockIPasswordHasher {
	mock := &MockIPasswordHasher{ctrl: ctrl}
	mock.recorder = &MockIPasswordHasherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPasswordHasher) EXPECT() *MockIPasswordHasherMockRecorder {
	return m.recorder
}

// ComparePasswordhash mocks base method.
func (m *MockIPasswordHasher) ComparePasswordhash(password, hash string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ComparePasswordhash", password, hash)
	ret0, _ := ret[0].(error)
	return ret0
}

// ComparePasswordhash indicates an expected call of ComparePasswordhash.
func (mr *MockIPasswordHasherMockRecorder) ComparePasswordhash(password, hash interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ComparePasswordhash", reflect.TypeOf((*MockIPasswordHasher)(nil).ComparePasswordhash), password, hash)
}

// GenerateHash mocks base method.
func (m *MockIPasswordHasher) GenerateHash(password string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateHash", password)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateHash indicates an expected call of GenerateHash.
func (mr *MockIPasswordHasherMockRecorder) GenerateHash(password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateHash", reflect.TypeOf((*MockIPasswordHasher)(nil).GenerateHash), password)
}
