// Code generated by MockGen. DO NOT EDIT.
// Source: bl/documentService/documentRepo/documentRepo.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	models "annotater/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIDocumentRepository is a mock of IDocumentRepository interface.
type MockIDocumentRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIDocumentRepositoryMockRecorder
}

// MockIDocumentRepositoryMockRecorder is the mock recorder for MockIDocumentRepository.
type MockIDocumentRepositoryMockRecorder struct {
	mock *MockIDocumentRepository
}

// NewMockIDocumentRepository creates a new mock instance.
func NewMockIDocumentRepository(ctrl *gomock.Controller) *MockIDocumentRepository {
	mock := &MockIDocumentRepository{ctrl: ctrl}
	mock.recorder = &MockIDocumentRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDocumentRepository) EXPECT() *MockIDocumentRepositoryMockRecorder {
	return m.recorder
}

// AddDocument mocks base method.
func (m *MockIDocumentRepository) AddDocument(doc *models.Document) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddDocument", doc)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddDocument indicates an expected call of AddDocument.
func (mr *MockIDocumentRepositoryMockRecorder) AddDocument(doc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddDocument", reflect.TypeOf((*MockIDocumentRepository)(nil).AddDocument), doc)
}

// DeleteDocumentByID mocks base method.
func (m *MockIDocumentRepository) DeleteDocumentByID(arg0 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteDocumentByID", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteDocumentByID indicates an expected call of DeleteDocumentByID.
func (mr *MockIDocumentRepositoryMockRecorder) DeleteDocumentByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDocumentByID", reflect.TypeOf((*MockIDocumentRepository)(nil).DeleteDocumentByID), arg0)
}

// GetDocumentByID mocks base method.
func (m *MockIDocumentRepository) GetDocumentByID(doc *models.Document) (*models.Document, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDocumentByID", doc)
	ret0, _ := ret[0].(*models.Document)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDocumentByID indicates an expected call of GetDocumentByID.
func (mr *MockIDocumentRepositoryMockRecorder) GetDocumentByID(doc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDocumentByID", reflect.TypeOf((*MockIDocumentRepository)(nil).GetDocumentByID), doc)
}
